/**
 * @file main.cpp
 * @brief Главный файл программы для поиска подстроки в тексте с использованием алгоритма Рабина-Карпа.
 *
 * В данной программе реализован основной процесс поиска подстроки в файле и записи результата
 * в выходной файл. Программа принимает входной файл, выводит результаты поиска подстроки,
 * а также сообщает количество коллизий, найденных во время поиска.
 */

#include "main_code.hpp"
#include <iostream>
#include <fstream>
#include <vector>
#include <string>

using namespace std;

/**
 * @brief Точка входа в программу.
 *
 * Основная логика программы:
 * 1. Получение имени входного и выходного файлов от пользователя.
 * 2. Чтение содержимого входного файла.
 * 3. Поиск подстроки с помощью алгоритма Рабина-Карпа.
 * 4. Запись позиций найденных подстрок в выходной файл.
 * 5. Вывод информации о количестве коллизий.
 *
 * @return 0, если программа завершена успешно, 1 в случае ошибки при чтении или записи файла.
 */
int main()
{
    string filename_input; ///< Имя входного файла
    string filename_output; ///< Имя выходного файла

    //! Запрашиваем имя входного файла
    cout << "Введите имя входного текстового файла: ";
    cin >> filename_input;

    //! Запрашиваем имя выходного файла
    cout << "Введите имя выходного текстового файла: ";
    cin >> filename_output;

    //! Чтение содержимого входного файла
    string text = FileManager::readFile(filename_input);
    if (text.empty()) {
        return 1; ///< Ошибка, если файл пуст или не удается его открыть
    }

    ofstream outputFile(filename_output);
    if (!outputFile) {
        cerr << "Ошибка при открытии файла!" << endl;
        return 1; ///< Ошибка при открытии выходного файла
    }

    string pattern; ///< Подстрока для поиска
    cout << "Введите строку для поиска: ";
    cin >> pattern;

    //! Создание объекта для поиска подстроки с использованием алгоритма Рабина-Карпа
    RabinKarpSearcher searcher(text, pattern);
    
    //! Поиск подстроки в тексте
    vector<int> positions = searcher.search();

    //! Проверка, найдена ли подстрока
    if (positions.empty()) {
        cout << "Подстрока не найдена." << endl;
    } else {
        //! Запись позиций найденных подстрок в выходной файл
        outputFile << "Подстрока найдена на позициях: ";
        for (int pos : positions) {
            outputFile << pos << " ";
        }
        outputFile << endl;
    }

    //!/Users/plushavey/Documents/myProjects/Rabin_Karp_algorithm/Rabin_Karp_algorithm/Text_2_11k.txt Вывод информации о количестве коллизий
    cout << "Количество коллизий: " << searcher.k << endl;
    cout << "Результат работы программы записан в файл: " << filename_output << endl;

    return 0; ///< Завершаем программу без ошибок
}

